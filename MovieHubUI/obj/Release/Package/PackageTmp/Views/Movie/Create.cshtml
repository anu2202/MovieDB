@model BOL.tbl_Movie

@{
    ViewBag.Title = "Create";
}
<link href="~/appcssstyle.css" rel="stylesheet" />
<h2 class="text-left">Create a new Movie</h2>


@using (Html.BeginForm("Create", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "nameField", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.ProducerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("ProducerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProducerId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    <input id="CreateProducer" type="submit" value="Create Producer" class="btn btn-default control-label" data-toggle="modal" data-target="#myModal2" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.tbl_ActorMovie, "Add Actor", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.ListBox("ActorId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.tbl_ActorMovie, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    <input id="CreateActor" type="submit" value="Create Actor" class="btn btn-default btnWidth" data-toggle="modal" data-target="#myModal" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfRelease, "Year Of Release", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfRelease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearOfRelease, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Plot, htmlAttributes: new { @class = "form-control", @id = "plotField" })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger", required = string.Empty })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @*<input type="file" name="file" id="file" style="width: 100%;" class="form-control" required="required" />*@
                <input type="file" id="file" name="photo" />
                @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
                <div id="hdnFileUpload" name="hdnFileUpload" class="text-danger">The Poster field is required</div>
            </div>
        </div>

     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="CreateMovie" />
            </div>
        </div>
    </div>

}

<div class="container">

    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Actor</h4>
                </div>
                <div class="modal-body" id="actorModalBody">
                    <div class="loader col-md-offset-4"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Trigger the modal with a button -->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal2" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Producer</h4>
                </div>
                <div class="modal-body" id="producerModalBody">
                    <div class="loader col-md-offset-4"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#hdnFileUpload").hide();

    });


    $(function () {

        $("#CreateMovie").click(function (event) {

            var isError = 0;
            if (document.getElementById("file").files.length == 0) {
                $("#hdnFileUpload").show();
                isError = 1;
            }

            if (isError == 1) {
                event.preventDefault();
            }
        });



    });

    $("#CreateActor").click(function () {


        $.ajax({
            cache: false,
            url: '/Actor/Create',
            contentType: 'application/html; charset=utf-8',
            type: 'GET',
            dataType: 'html'
        }).success(function (data) {
            $("#actorModalBody").html(data);

        }).error(function () {
            //Do something with the error
        });
    });


    $(function () {
        $("#CreateProducer").click(function () {

            $.ajax({
                cache: false,
                url: '/Producer/Create',
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html'
            }).success(function (data) {

                $("#producerModalBody").html(data);

            }).error(function () {
                // Do something with the error
            });
        });
    });
</script>


